basePath: /
definitions:
  entity.Partnership:
    properties:
      created_at:
        type: string
      ended_at:
        type: string
      id:
        type: integer
      status:
        $ref: '#/definitions/entity.Status'
      trainer_id:
        type: integer
      user_id:
        type: integer
    type: object
  entity.Request:
    properties:
      email:
        type: string
      name:
        type: string
      request_id:
        type: integer
      send_at:
        type: string
      surname:
        type: string
      user_id:
        type: integer
    type: object
  entity.Role:
    enum:
    - user
    - trainer
    type: string
    x-enum-varnames:
    - UserRole
    - TrainerRole
  entity.Status:
    enum:
    - approved
    - request
    - ended by user
    - ended by trainer
    type: string
    x-enum-varnames:
    - StatusApproved
    - StatusRequest
    - StatusEndedByUser
    - StatusEndedByTrainer
  entity.UpdateWorkout:
    properties:
      date:
        type: string
      description:
        type: string
      title:
        type: string
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password_hash:
        type: string
      role:
        $ref: '#/definitions/entity.Role'
      surname:
        type: string
    required:
    - email
    - name
    - password_hash
    - surname
    type: object
  entity.UserInfo:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      partnerships:
        items:
          $ref: '#/definitions/entity.Partnership'
        type: array
      role:
        $ref: '#/definitions/entity.Role'
      surname:
        type: string
      workouts:
        items:
          $ref: '#/definitions/entity.Workout'
        type: array
    required:
    - email
    - name
    - surname
    type: object
  entity.UserUpdate:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/entity.Role'
      surname:
        type: string
    type: object
  entity.Workout:
    properties:
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      trainer_id:
        type: integer
      user_id:
        type: integer
    required:
    - title
    type: object
  handler.adminSignInInput:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  handler.errorResponse:
    properties:
      error:
        type: string
    type: object
  handler.idResponse:
    properties:
      id:
        type: integer
    type: object
  handler.partnershipIdResponse:
    properties:
      partnership_id:
        type: integer
    type: object
  handler.partnershipsResponse:
    properties:
      partnerships:
        items:
          $ref: '#/definitions/entity.Partnership'
        type: array
    type: object
  handler.requestIdResponse:
    properties:
      request_id:
        type: integer
    type: object
  handler.signInResponse:
    properties:
      token:
        type: string
    type: object
  handler.userSignInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handler.usersInfoResponse:
    properties:
      usersInfo:
        items:
          $ref: '#/definitions/entity.UserInfo'
        type: array
    type: object
  handler.usersResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/entity.User'
        type: array
    type: object
  handler.workoutIdResponse:
    properties:
      workout_id:
        type: integer
    type: object
  handler.workoutsResponse:
    properties:
      workouts:
        items:
          $ref: '#/definitions/entity.Workout'
        type: array
    type: object
host: 143.198.157.158:8001
info:
  contact: {}
  description: API Server for Fitness application
  title: Fitness REST API
  version: "1.0"
paths:
  /admin/auth/sign-in:
    post:
      consumes:
      - application/json
      description: sign-in as admin
      operationId: admin-sign-in
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.adminSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.signInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Sign In for admin
      tags:
      - auth
  /admin/trainer:
    get:
      description: get full information about all trainers
      operationId: get-trainers-full-info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.usersInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get trainers full info
      tags:
      - admin
  /admin/user:
    get:
      description: get full information about all users (not trainers)
      operationId: get-users-full-info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.usersInfoResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get users full info
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: creates user
      operationId: create-user
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.idResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - admin
  /admin/user/:id:
    delete:
      consumes:
      - application/json
      description: deletes user
      operationId: delete-user
      parameters:
      - description: update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.idResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - admin
    get:
      description: get full information about user by id
      operationId: get-user-full-info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user full info
      tags:
      - admin
    put:
      consumes:
      - application/json
      description: updates user info
      operationId: update-user
      parameters:
      - description: update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.idResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - admin
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: sign-in
      operationId: sign-in
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.userSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.signInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Sign In
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: creates user account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.idResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Sign Up
      tags:
      - auth
  /trainer/auth/sign-in:
    post:
      consumes:
      - application/json
      description: sign-in as trainer
      operationId: trainer-sign-in
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.userSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.signInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Sign In for trainer
      tags:
      - auth
  /trainer/request:
    get:
      description: get information about users which send request to trainer
      operationId: get-trainer-requests
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.usersResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get requests
      tags:
      - trainer
  /trainer/request/:id:
    delete:
      description: deny and delete request from user by provided request id
      operationId: deny-request
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Deny request
      tags:
      - trainer
    get:
      description: get information about trainer request by id
      operationId: get-trainer-request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Request'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get request by id
      tags:
      - trainer
    put:
      description: accepts request from user by provided request id if possible
      operationId: accept-request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.partnershipIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Accept request
      tags:
      - trainer
  /trainer/user:
    get:
      description: get information about trainer clients
      operationId: get-trainer-clients
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.usersResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get clients
      tags:
      - trainer
  /trainer/user/:id:
    get:
      description: get information about trainer client
      operationId: get-trainer-user-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - trainer
    post:
      description: starts partnership with user if possible
      operationId: init-partnership-with-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.partnershipIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Init partnership
      tags:
      - trainer
    put:
      description: ends partnership with user if possible
      operationId: end-partnership-with-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.partnershipIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: End partnership
      tags:
      - trainer
  /trainer/workout:
    get:
      description: get information about trainer workouts
      operationId: get-trainer-workouts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.workoutsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get workouts
      tags:
      - trainer
    post:
      consumes:
      - application/json
      description: creates workout with user
      operationId: create-workout-as-trainer
      parameters:
      - description: workout info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.Workout'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.workoutIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create workout
      tags:
      - trainer
  /trainer/workout/:id:
    delete:
      description: deletes workout
      operationId: delete-workout-trainer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete workout
      tags:
      - trainer
    get:
      description: get information about workout using workout id
      operationId: get-workout-trainer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Workout'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get workout by id
      tags:
      - user
      - trainer
    put:
      consumes:
      - application/json
      description: updates workout
      operationId: update-workout-trainer
      parameters:
      - description: update workout info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateWorkout'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.workoutIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update workout
      tags:
      - trainer
  /trainer/workout/user/:id:
    get:
      description: get information about trainer workouts with user
      operationId: get-trainer-workouts-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.workoutsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get workouts with user
      tags:
      - trainer
  /user:
    get:
      description: get information about yourself
      operationId: get-user-info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user info
      tags:
      - user
  /user/partnership:
    get:
      description: get information about your partnerships
      operationId: get-partnership
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.partnershipsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get partnerships
      tags:
      - user
  /user/partnership/trainer/:id:
    post:
      description: sends request to trainer to become his client
      operationId: send-request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.requestIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Send request
      tags:
      - user
    put:
      description: ends partnership with trainer
      operationId: end-partnership-as-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.partnershipIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: End partnership
      tags:
      - user
  /user/trainer:
    get:
      description: get information about all trainers
      operationId: get-trainers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.usersResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all trainers
      tags:
      - user
  /user/trainer/:id:
    get:
      description: get information about trainer using id
      operationId: get-trainer-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get trainer
      tags:
      - user
  /user/workout:
    get:
      description: get information about your workouts
      operationId: get-user-workouts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.workoutsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all workouts
      tags:
      - user
    post:
      consumes:
      - application/json
      description: creates workout
      operationId: create-workout-as-user
      parameters:
      - description: workout info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.Workout'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.workoutIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create workout
      tags:
      - user
  /user/workout/:id:
    delete:
      description: deletes workout
      operationId: delete-workout-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete workout
      tags:
      - user
    get:
      description: get information about workout using workout id
      operationId: get-workout-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Workout'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get workout by id
      tags:
      - user
    put:
      consumes:
      - application/json
      description: updates workout
      operationId: update-workout-user
      parameters:
      - description: update workout info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateWorkout'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.workoutIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update workout
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
